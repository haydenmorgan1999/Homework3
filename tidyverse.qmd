---
title: "tidyverse"
format: pdf
editor_options: 
  chunk_output_type: console
---

```{r}
#| warning: false
#| message: false
library(tidyverse)
library(palmerpenguins)
```

## Task 1
### Question A
```{r}
?read_csv()
```

**In 1-2 sentences, explain why we can not use specifically the read_csv() to read in these data.**

read_csv() can read in files with comma separated values, and read_csv2() can read in files with semicolons as delimiters instead. Because data.txt and data2.txt contain semicolons and not commas, we must use read_csv2() instead of read_csv() to read in the data.

```{r}
data <- read_csv2("Data/data.txt")

data
```

### Question B
```{r}
six <- read_delim("Data/data2.txt",
                  delim = "6",
                  col_types = "fdc")

six
```

## Task 2
### Question A
```{r}
trailblazer <- read_csv("Data/trailblazer.csv")

glimpse(trailblazer)
```

### Question B
```{r}
trailblazer_longer <- trailblazer |>
                        pivot_longer(cols = 2:11,
                          names_to = c("Game", "Location"),
                          names_sep = "_",
                          values_to = "Points")

head(trailblazer_longer, n=5)

trailblazer_longer # showing that there are 90 rows and 4 cols
```

### Question C
```{r}
trailblazer_wider <- trailblazer_longer |>
                       pivot_wider(names_from = Location,
                                   values_from = Points) |>
                       group_by(Player) |>
                       summarize(mean_home = mean(Home, na.rm = T),
                                 mean_away = mean(Away, na.rm = T),
                                 points_diff = mean_home - mean_away) |>
                       arrange(desc(points_diff))
  
trailblazer_wider
```

**In 1 sentence, state which players scored, on average, more points at home through the first 10 games of the season than away.**

On average, player Jusuf Nurkic scored more points at home through the first 10 games of the season than at away games.

## Task 3
### Question A

**Written answer to Task 3, Question A**

When trying to pivot the penguins data set wider, there is an error that is thrown due to non-unique values of bill length. This means that there are some data points that are common across penguins/islands and cannot be distinguished from one another, so there is not a way to show the values distinctly with the wider data set. 

The NULL column value is showing that the indicated list is empty - there are no data for Gentoo penguins on the islands Torgersen and Dream, for example, but there ARE data for these penguins on island Biscoe (the only island for Gentoo that did not display NULL).

The <dbl [52]> text in the Adelie row, Torgersen column indicates that there is a list of 52 double numeric values present for this species/island pair. 

Finally, "list" appears under each island name, indicating that the data type for all these is list (as opposed to double, character, etc.).

### Question B
```{r}
penguins |>
  group_by(species, island) |>
  summarize(n = as.numeric(n())) |>
  pivot_wider(names_from = island,
              values_from = n,
              values_fill = 0)
```

## Task 4
```{r}
penguins |>
  mutate(bill_length_mm = case_when(is.na(bill_length_mm) & species == 
                                    "Adelie" ~ 26,
            is.na(bill_length_mm) & species == "Gentoo" ~ 30,
            TRUE ~ bill_length_mm)) |>
  arrange(bill_length_mm) |>
  print(n = 10)
```